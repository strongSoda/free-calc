---
// src/pages/calculators/volume/sphere/[unit]/[radius].astro
import Layout from "../../../../../layouts/Layout.astro";
import GpaLayout from "../../../../../components/GpaLayout";
import SphereCalculator from "../../../../../components/SphereCalculator";

export function getStaticPaths() {
  // Common radii for different units and use cases
  const commonDimensions = {
    m: [
      { r: 0.5, useCase: "Small Storage Sphere" },
      { r: 1, useCase: "Standard Storage Ball" },
      { r: 1.5, useCase: "Medium Storage Sphere" },
      { r: 2, useCase: "Large Storage Sphere" },
      { r: 2.5, useCase: "Industrial Sphere" },
      { r: 3, useCase: "Large Industrial Sphere" },
    ],
    ft: [
      { r: 1, useCase: "Small Tank" },
      { r: 2, useCase: "Medium Tank" },
      { r: 3, useCase: "Storage Sphere" },
      { r: 4, useCase: "Large Storage Sphere" },
      { r: 5, useCase: "Industrial Sphere" },
      { r: 6, useCase: "Large Industrial Sphere" },
    ],
    in: [
      { r: 3, useCase: "Small Ball" },
      { r: 4, useCase: "Sports Ball" },
      { r: 6, useCase: "Large Ball" },
      { r: 8, useCase: "Exercise Ball" },
      { r: 10, useCase: "Large Sphere" },
      { r: 12, useCase: "Extra Large Sphere" },
    ],
    cm: [
      { r: 5, useCase: "Small Ball" },
      { r: 10, useCase: "Medium Ball" },
      { r: 15, useCase: "Large Ball" },
      { r: 20, useCase: "Extra Large Ball" },
      { r: 25, useCase: "Sphere Container" },
      { r: 50, useCase: "Large Container" },
    ],
  };

  const paths = [];

  Object.entries(commonDimensions).forEach(([unit, dimensions]) => {
    dimensions.forEach(({ r, useCase }) => {
      const volume = (4 / 3) * Math.PI * Math.pow(r, 3);
      const surfaceArea = 4 * Math.PI * Math.pow(r, 2);
      const circumference = 2 * Math.PI * r;

      paths.push({
        params: {
          unit,
          radius: r.toString(),
        },
        props: {
          unit,
          radius: r,
          volume: volume,
          surfaceArea: surfaceArea,
          circumference: circumference,
          diameter: 2 * r,
          useCase,
          commonDimensions,
        },
      });
    });
  });

  return paths;
}

const {
  unit,
  radius,
  volume,
  surfaceArea,
  circumference,
  diameter,
  useCase,
  commonDimensions,
} = Astro.props;

const title = `${radius} ${unit} Radius Sphere Calculator`;
const description = `Calculate the volume of a sphere with radius ${radius} ${unit}. Perfect for ${useCase.toLowerCase()}.`;
const keywords = `${radius} ${unit} sphere, ${radius} ${unit} ball volume, sphere calculator, ${useCase.toLowerCase()} volume`;
---

<Layout
  title={title}
  description={description}
  keywords={keywords}
  currentUrl={Astro.url.pathname}
>
  <GpaLayout client:load {title} {description} {keywords}>
    <div class="space-y-12">
      {/* Result Overview */}
      <section
        class="bg-surface-light dark:bg-surface-dark-hover rounded-xl p-6 border border-gray-200/10 dark:border-gray-800/10"
      >
        <h2 class="text-2xl font-display font-bold mb-6">
          {radius}
          {unit} Radius Sphere
        </h2>
        <div class="grid md:grid-cols-2 gap-6">
          <div
            class="bg-surface-light-hover dark:bg-surface-dark p-4 rounded-lg"
          >
            <h3 class="font-display font-semibold mb-2">Dimensions</h3>
            <ul
              class="space-y-1 text-content-light-dimmed dark:text-content-dark-dimmed"
            >
              <li>Radius: {radius} {unit}</li>
              <li>Diameter: {diameter} {unit}</li>
              <li>Circumference: {circumference.toFixed(2)} {unit}</li>
            </ul>
          </div>
          <div
            class="bg-surface-light-hover dark:bg-surface-dark p-4 rounded-lg"
          >
            <h3 class="font-display font-semibold mb-2">Volume</h3>
            <p class="text-2xl font-bold text-accent-primary">
              {volume.toFixed(2)}
              {unit}³
            </p>
          </div>
        </div>
      </section>

      {/* Calculator */}
      <section>
        <h2 class="text-2xl font-display font-bold mb-6">Try the Calculator</h2>
        <SphereCalculator
          client:load
          defaultRadius={radius.toString()}
          defaultUnit={`${unit}³`}
        />
      </section>

      {/* Formula and Calculation */}
      <section class="prose dark:prose-invert max-w-none">
        <h2>Calculation Breakdown</h2>
        <div
          class="bg-surface-light-hover dark:bg-surface-dark p-4 rounded-lg mb-4"
        >
          <p>Volume = (4/3) × π × radius³</p>
          <p>Volume = (4/3) × π × {radius}³ = {volume.toFixed(2)} {unit}³</p>
        </div>

        <h3>Additional Measurements</h3>
        <ul>
          <li>Surface Area: {surfaceArea.toFixed(2)} {unit}²</li>
          <li>
            Great Circle Area: {(Math.PI * Math.pow(radius, 2)).toFixed(2)}
            {unit}²
          </li>
          <li>Circumference: {circumference.toFixed(2)} {unit}</li>
        </ul>

        <h3>Common Use Case</h3>
        <p>
          A sphere of this size is commonly used as a {useCase.toLowerCase()}.
        </p>
      </section>

      {/* Related Dimensions */}
      <section
        class="bg-surface-light dark:bg-surface-dark-hover rounded-xl p-6 border border-gray-200/10 dark:border-gray-800/10"
      >
        <h2 class="text-2xl font-display font-bold mb-6">Similar Sizes</h2>
        <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
          {
            commonDimensions[unit].slice(0, 8).map((dim) => (
              <a
                href={`/calculators/volume/sphere/${unit}/${dim.r}`}
                class="p-4 bg-surface-light-hover dark:bg-surface-dark rounded-lg hover:bg-accent-primary/5 transition-colors"
              >
                <span class="text-content-light dark:text-content-dark">
                  {dim.r} {unit} radius ({dim.useCase})
                </span>
              </a>
            ))
          }
        </div>
      </section>
    </div>
  </GpaLayout>
</Layout>
