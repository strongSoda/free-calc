---
// src/pages/calculators/volume/cube/[unit]/[value].astro
import Layout from "../../../../../layouts/Layout.astro";
import GpaLayout from "../../../../../components/GpaLayout";
import VolumeCalculator from "../../../../../components/VolumeCalculator";

export function getStaticPaths() {
  // Common side lengths for each unit
  const commonValues = {
    m: [
      1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4,
      2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9,
      4, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5, 5.5, 6, 6.5, 7, 7.5, 8,
      8.5, 9, 9.5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 28,
      30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 110, 120,
      130, 140, 150, 160, 170, 180, 190, 200,
    ],
    ft: [
      1, 1.2, 1.5, 1.8, 2, 2.2, 2.5, 2.8, 3, 3.2, 3.5, 3.8, 4, 4.2, 4.5, 4.8, 5,
      5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 11, 12, 13, 14, 15, 16, 17, 18,
      19, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52,
      54, 56, 58, 60, 65, 70, 75, 80, 85, 90, 95, 100, 110, 120, 130, 140, 150,
      160, 170, 180, 190, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380, 400,
      450, 500, 550, 600, 650,
    ],
    in: [
      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22,
      24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58,
      60, 65, 70, 75, 80, 85, 90, 95, 100, 110, 120, 130, 140, 150, 160, 170,
      180, 190, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380, 400, 450, 500,
      550, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1100, 1200, 1300, 1400,
      1500, 1600, 1700, 1800, 1900, 2000,
    ],
    yd: [
      1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4,
      2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9,
      4, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5, 5.5, 6, 6.5, 7, 7.5, 8,
      8.5, 9, 9.5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 28,
      30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 110, 120,
      130, 140, 150, 160, 170, 180, 190, 200,
    ],
    cm: [
      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22,
      24, 26, 28, 30, 32, 34, 36, 38, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85,
      90, 95, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 220, 240,
      260, 280, 300, 320, 340, 360, 380, 400, 450, 500, 550, 600, 650, 700, 750,
      800, 850, 900, 950, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800,
      1900, 2000, 2200, 2400, 2600, 2800, 3000, 3200,
    ],
    mm: [
      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 200,
      300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500,
      1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700,
      2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900,
      4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100,
      5200, 5300, 5400, 5500, 5600, 5700, 5800, 5900, 6000, 6100, 6200, 6300,
      6400, 6500, 6600, 6700, 6800, 6900, 7000, 7100, 7200,
    ],
  };

  const unitLabels = {
    m: "Meters",
    ft: "Feet",
    in: "Inches",
    yd: "Yards",
    cm: "Centimeters",
    mm: "Millimeters",
  };

  const paths = [];

  Object.entries(commonValues).forEach(([unit, values]) => {
    values.forEach((value) => {
      paths.push({
        params: { unit, value: value.toString() },
        props: {
          unit,
          value,
          unitLabel: unitLabels[unit],
          volume: Math.pow(value, 3),
          commonValues,
        },
      });
    });
  });

  return paths;
}

const { unit, value, unitLabel, volume, commonValues } = Astro.props;

const title = `${value} ${unitLabel} Cube Side Length - Volume Calculator`;
const description = `Calculate the volume of a cube with ${value} ${unitLabel} sides. A cube with side length ${value} ${unit} has a volume of ${volume} cubic ${unit}.`;
const keywords = `${value} ${unit} cube side, ${value} ${unitLabel} cube calculator, cube with ${value} ${unit} sides, cube calculator`;
---

<Layout>
  <GpaLayout client:load {title} {description} {keywords}>
    <div class="space-y-12">
      {/* Result Overview */}
      <section
        class="bg-surface-light dark:bg-surface-dark-hover rounded-xl p-6 border border-gray-200/10 dark:border-gray-800/10"
      >
        <h2 class="text-2xl font-display font-bold mb-6">
          Cube with {value}
          {unitLabel} Sides
        </h2>
        <div class="grid md:grid-cols-2 gap-6">
          <div
            class="bg-surface-light-hover dark:bg-surface-dark p-4 rounded-lg"
          >
            <h3 class="font-display font-semibold mb-2">Side Length</h3>
            <p class="text-2xl font-bold text-accent-primary">{value} {unit}</p>
          </div>
          <div
            class="bg-surface-light-hover dark:bg-surface-dark p-4 rounded-lg"
          >
            <h3 class="font-display font-semibold mb-2">Volume</h3>
            <p class="text-2xl font-bold text-accent-primary">
              {parseFloat(volume.toFixed(3))}
              {unit}³
            </p>
          </div>
        </div>
      </section>

      {/* Calculator (Pre-filled) */}
      <section>
        <h2 class="text-2xl font-display font-bold mb-6">Try the Calculator</h2>
        <VolumeCalculator
          client:load
          shape="cube"
          defaultValue={value.toString()}
          defaultUnit={`${unit}³`}
        />
      </section>

      {/* Formula and Calculation */}
      <section class="prose dark:prose-invert max-w-none">
        <h2>Calculation Breakdown</h2>
        <div
          class="bg-surface-light-hover dark:bg-surface-dark p-4 rounded-lg mb-4"
        >
          <p>Volume = side × side × side</p>
          <p>Volume = {value} × {value} × {value} = {volume} {unit}³</p>
        </div>

        <h3>Other Measurements</h3>
        <ul>
          <li>Surface Area: {6 * Math.pow(value, 2)} {unit}²</li>
          <li>Edge Length (total): {12 * value} {unit}</li>
        </ul>

        <h3>Real-world Examples</h3>
        <p>A cube with {value} {unitLabel} sides could be:</p>
        {
          unit === "ft" && (
            <ul>
              {value <= 3 && <li>A small storage box or container</li>}
              {value > 3 && value <= 8 && <li>A typical room section</li>}
              {value > 8 && <li>A large storage space or small room</li>}
            </ul>
          )
        }
        {/* Add similar conditions for other units */}
      </section>

      {/* Related Calculations */}
      <section
        class="bg-surface-light dark:bg-surface-dark-hover rounded-xl p-6 border border-gray-200/10 dark:border-gray-800/10"
      >
        <h2 class="text-2xl font-display font-bold mb-6">
          Related Side Lengths
        </h2>
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
          {
            commonValues[unit]
              .splice(0, 4)
              .filter((v) => v > 0)
              .map((relatedValue) => (
                <a
                  href={`/calculators/volume/cube/${unit}/${relatedValue}`}
                  class="p-4 bg-surface-light-hover dark:bg-surface-dark rounded-lg hover:bg-accent-primary/5 transition-colors"
                >
                  <span class="text-content-light dark:text-content-dark">
                    {relatedValue} {unit}
                  </span>
                </a>
              ))
          }
        </div>
      </section>
    </div>
  </GpaLayout>
</Layout>
